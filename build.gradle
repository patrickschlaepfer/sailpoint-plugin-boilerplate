import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
   repositories {
      mavenCentral()
      flatDir {
              dirs 'libs'
      }
   }
}

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    // jcenter()
    mavenCentral()
}

apply plugin: "java"
apply plugin: "eclipse"

version="1.0"
def mockup=false

ext {
   sailpointVersion = "7.1"
   commonsLoggingVersion = "1.1.3"
   jerseyVersion = "1.19"
}

// JDK version source compatibility
sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation "commons-io:commons-io:2.11.0"
    implementation "org.apache.logging.log4j:log4j-core:2.7"

    // Sailpoint libraries
    implementation files('libs/identityiq.jar')
    implementation files('libs/SSAppender.jar')

    // compile "com.sailpoint:identityiq:$sailpointVersion"
    // compile "com.sailpoint:ssappender:$sailpointVersion"
    implementation "org.aspectj:aspectjrt:1.8.10"
    implementation "org.aspectj:aspectjtools:1.7.0"

    implementation "commons-logging:commons-logging:$commonsLoggingVersion"
    implementation "com.googlecode.juniversalchardet:juniversalchardet:1.0.3"
    // compile "org.json:json:20080701"

    implementation "asm:asm:3.3.1"
    implementation "org.json:json:20140107"
    implementation "com.sun.jersey:jersey-bundle:$jerseyVersion"
    implementation "com.sun.jersey:jersey-server:$jerseyVersion"
    implementation "com.sun.jersey:jersey-core:$jerseyVersion"

    implementation "com.owlike:genson:0.99"

    // For Servlet Container like Tomcat
    implementation "com.sun.faces:jsf-api:2.2.14"
    implementation "com.sun.faces:jsf-impl:2.2.14"

    implementation "org.apache.myfaces.tomahawk:tomahawk20:1.1.14"

    implementation "javax.servlet:jstl:1.2"

    implementation "javax.servlet:servlet-api:2.5"
    implementation "javax.servlet.jsp:jsp-api:2.1"
    implementation "com.sun.el:el-ri:1.0"

    implementation "javax.ws.rs:javax.ws.rs-api:2.0"

    implementation "org.codehaus.jackson:jackson-mapper-asl:1.8.9"
    implementation "org.codehaus.jackson:jackson-core-asl:1.8.9"

    implementation "com.cebglobal:xpresso:0.9.0"

    testImplementation 'junit:junit:4.12'

}

// frontend:build will be run before the processResources
processResources.dependsOn('frontend:build')


task packplugin(type: Zip) {
  from('frontend/build') {
    include '*'
    include '*/**'
    into 'ui'
  }
  from('build/libs')  {
    include '**/*.jar'
    into 'libs'
  }
  from('src/main/resources') {
    include '*'
    include '*/**'
    exclude 'api'
  }
  archiveName "${rootProject.name}-${version}.zip"
  destinationDir(file('build'))
}

task compileplugin () {
    dependsOn 'clean'
    dependsOn 'build'
    dependsOn 'packplugin'
    tasks.findByName('build').mustRunAfter('clean')
    tasks.findByName('packplugin').mustRunAfter('build')
}
